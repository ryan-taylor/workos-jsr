{
  "name": "@ryantaylor/workos",
  "version": "0.1.0",
  "exports": "./mod.ts",
  "importMap": "./import_map.f2.json",
  "tasks": {
    "lint": "deno lint --ignore=_reference/**",
    "check": "deno check mod.ts",
    "test": "deno test -A --ignore=_reference,examples",
    "dev": "cd examples/fresh-canary && deno task start",
    "rewrite-imports": "deno run -A scripts/rewrite-imports.ts",
    "fetch:spec": "deno run --allow-net --allow-read --allow-write scripts/codegen/fetch_spec.ts",
    "prebuild:api": "deno run -A scripts/codegen/prebuild.ts $(find ./vendor/openapi -name 'workos-*.json' -type f | sort -r | head -n 1 || echo './scripts/codegen/detect_adapter.ts')",
    "generate:api": "deno task prebuild:api && DENO_DIR=.deno_codegen_cache deno run -A scripts/codegen/build.ts && deno fmt packages/workos_sdk/generated && deno check packages/workos_sdk/generated/**/*.ts",
    "codegen:upgrade": "deno run -A scripts/codegen/upgrade.ts",
    "ci:dialect-check": "deno run -A scripts/ci/dialect-check.ts",
    "precommit:check-adapter": "deno task prebuild:api"
  },
  "dependencies": {
    "@std/crypto": "^1",
    "@std/fs": "^1",
    "@std/path": "^1",
    "@std/http": "^1",
    "@std/assert": "^1",
    "@std/testing": "^1",
    "@denosaurs/typefetch": "^0.2"
  }
}
