// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.

import { assertArg } from "../_common/normalize.ts";
import { normalizeString } from "../_common/normalize_string.ts";
import { isPosixPathSeparator } from "./_util.ts";

/**
 * Normalize the `path`, resolving `'..'` and `'.'` segments.
 * Note that resolving these segments does not necessarily mean that all will be eliminated.
 * A `'..'` at the top-level will be preserved, and an empty path is canonically `'.'`.
 *
 * @example Usage
 * ```ts
 * import { normalize } from "@std/path/posix/normalize";
 * import { assertEquals } from "@std/assert";
 *
 * const path = normalize("/foo/bar//baz/asdf/quux/..");
 * assertEquals(path, "/foo/bar/baz/asdf");
 * ```
 *
 * @example Working with URLs
 *
 * Note: This function will remove the double slashes from a URL's scheme.
 * Hence, do not pass a full URL to this function. Instead, pass the pathname of
 * the URL.
 *
 * ```ts
 * import { normalize } from "@std/path/posix/normalize";
 * import { assertEquals } from "@std/assert";
 *
 * const url = new URL("https://deno.land");
 * url.pathname = normalize("//std//assert//.//mod.ts");
 * assertEquals(url.href, "https://deno.land/std/assert/mod.ts");
 *
 * url.pathname = normalize("std/assert/../async/retry.ts");
 * assertEquals(url.href, "https://deno.land/std/async/retry.ts");
 * ```
 *
 * Note: If you are working with file URLs,
 * use the new version of `normalize` from `@std/path/posix/unstable-normalize`.
 *
 * @param path The path to normalize.
 * @returns The normalized path.
 */
export function normalize(path: string): string {
  assertArg(path);

  const isAbsolute = isPosixPathSeparator(path.charCodeAt(0));
  const trailingSeparator = isPosixPathSeparator(
    path.charCodeAt(path.length - 1),
  );

  // Normalize the path
  path = normalizeString(path, !isAbsolute, "/", isPosixPathSeparator);

  if (path.length === 0 && !isAbsolute) path = ".";
  if (path.length > 0 && trailingSeparator) path += "/";

  if (isAbsolute) return `/${path}`;
  return path;
}

// denoCacheMetadata={"headers":{"etag":"\"2f1d9c9eedf6432fba59c36e31d81e0b\"","x-content-type-options":"nosniff","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-goog-stored-content-length":"2081","accept-ranges":"bytes","x-guploader-uploadid":"AAO2VwoUooWwNcemFt_C7qyfPwQ3VhC2Cbf75_uAvjjqJkISRPxecrH9r4dxiJFEWK8_SUtJHkiRx8PwjJy00g","x-robots-tag":"noindex","cache-control":"public, max-age=31536000, immutable","x-goog-metageneration":"1","access-control-allow-origin":"*","access-control-expose-headers":"*","last-modified":"Thu, 24 Apr 2025 06:23:27 GMT","expires":"Wed, 13 May 2026 01:47:32 GMT","x-goog-generation":"1745475807029447","x-goog-stored-content-encoding":"identity","via":"1.1 google","x-jsr-cache-id":"YYZ","x-goog-storage-class":"STANDARD","x-jsr-cache-status":"revalidated","cross-origin-resource-policy":"cross-origin","x-goog-hash":"crc32c=DWbvQA==,md5=Lx2cnu32Qy+6WcNuMdgeCw==","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","server":"UploadServer","date":"Tue, 13 May 2025 01:47:32 GMT","content-length":"2081","content-type":"text/typescript","age":"0"},"url":"https://jsr.io/@std/path/1.0.9/posix/normalize.ts","time":1747100852}