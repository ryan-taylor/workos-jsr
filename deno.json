{
  "name": "@ryantaylor/workos",
  "version": "1.0.0",
  "exports": "./mod.ts",
  "importMap": "./import_map.json",
  "nodeModulesDir": "auto",
  "exclude": ["archive/**", "src/**"],
  "tasks": {
    "fmt": "deno fmt",
    "lint": "deno lint --ignore=.deno_codegen_cache,coverage_html,vendor",
    "lint:staged": "deno fmt --check $FILES && deno lint $FILES",
    "check": "deno check mod.ts && deno task check-await",
    "pretest": "deno run -A scripts/check-import-map.ts",
    "test": "deno test -A tests_deno/**/*.test.ts",
    "test:watch": "deno test -A tests_deno/**/*.test.ts --watch",
    "test:codegen": "deno test --allow-read --allow-write --allow-run --allow-sys tests_deno/codegen/**/*.test.ts",
    "test:codegen:file-rw": "deno test --allow-read --allow-write tests_deno/codegen/dereference-spec.test.ts tests_deno/codegen/runtime_smoke.test.ts tests_deno/codegen/spec_validator.test.ts tests_deno/codegen/typescript_compile.test.ts tests_deno/codegen/verify-spec.test.ts",
    "test:codegen:system": "deno test --allow-read --allow-write --allow-run --allow-sys tests_deno/codegen/adapter-contract.test.ts",
    "coverage": "deno test -A tests_deno/**/*.test.ts --coverage=cov_profile && deno coverage cov_profile --lcov > coverage.lcov",
    "test:coverage": "deno test -A tests_deno/**/*.test.ts --coverage=cov_profile && deno coverage cov_profile --lcov > coverage.lcov",
    "test:coverage:full": "deno test -A tests_deno/**/*.test.ts --coverage=cov_profile && deno coverage cov_profile --lcov > coverage.lcov",
    "test:coverage:report": "deno test -A tests_deno/**/*.test.ts --coverage=cov_profile && deno coverage cov_profile --lcov > coverage.lcov && deno run -A scripts/coverage-report.ts",
    "coverage:report": "deno run -A scripts/coverage-report.ts",
    "coverage:html": "deno run -A scripts/coverage-html.ts",
    "dev": "cd examples/fresh-canary && deno task start",
    "rewrite-imports": "deno run -A scripts/rewrite-imports.ts",
    "fetch:spec": "deno run --allow-net --allow-read --allow-write scripts/codegen/fetch_spec.ts",
    "prebuild:api": "deno run -A scripts/codegen/prebuild.ts $(find ./vendor/openapi -name 'workos-*.json' -type f | sort -r | head -n 1 || echo './scripts/codegen/detect_adapter.ts')",
    "generate:api": "deno task prebuild:api && DENO_DIR=.deno_codegen_cache deno run -A scripts/codegen/build.ts && deno fmt packages/workos_sdk/generated && deno run --allow-read --allow-write --allow-run scripts/patch-openapi-runtime-cached.ts && deno check packages/workos_sdk/generated/**/*.ts tests_deno/codegen/_runtime_output/**/*.ts",
    "generate:api:strict": "deno task prebuild:api && DENO_DIR=.deno_codegen_cache deno run -A scripts/codegen/build.ts && deno fmt packages/workos_sdk/generated && deno run --allow-read --allow-write --allow-run scripts/patch-openapi-runtime-cached.ts --strict-types && deno check packages/workos_sdk/generated/**/*.ts tests_deno/codegen/_runtime_strict_output/**/*.ts",
    "generate:api:force": "deno task prebuild:api && DENO_DIR=.deno_codegen_cache deno run -A scripts/codegen/build.ts && deno fmt packages/workos_sdk/generated && deno run --allow-read --allow-write --allow-run scripts/patch-openapi-runtime-cached.ts --force && deno check packages/workos_sdk/generated/**/*.ts tests_deno/codegen/_runtime_output/**/*.ts",
    "codegen:upgrade": "deno run -A scripts/codegen/upgrade.ts",
    "ci:dialect-check": "deno run -A scripts/ci/dialect-check.ts",
    "ci-check": "deno fmt --check && deno lint && deno check mod.ts && deno task check-await && deno task publish:smoke && deno test -A tests_deno/scripts",
    "precommit:check-adapter": "deno task prebuild:api",
    "check-await": "deno run --allow-read --allow-env scripts/check-await.ts",
    "publish:smoke": "deno run --allow-run scripts/jsr-smoke.ts",
    "publish:try": "deno run --allow-run scripts/jsr-smoke.ts --show-panics"
  },
  "lint": {
    "rules": {
      "tags": ["recommended"],
      "exclude": ["no-explicit-any", "no-unused-vars", "require-await"],
      "include": [
        "no-npm-imports/no-sloppy-imports",
        "no-npm-imports/no-sloppy-node"
      ]
    },
    "exclude": [
      ".deno_codegen_cache/",
      ".cache/",
      "tests_deno/codegen/_runtime_test_output/**",
      "tests_deno/codegen/_runtime_output/**",
      "tests_deno/codegen/_runtime_strict_output/**",
      "templates/openapi-ts/**",
      "temp_deno_dir/**",
      "examples/**",
      "scripts/**",
      "tests_deno/scripts/**"
    ],
    "plugins": []
  },
  "dependencies": {
    "@std/crypto": "^1",
    "@std/fs": "^1",
    "@std/path": "^1",
    "@std/http": "^1",
    "@std/assert": "^1",
    "@std/testing": "^1",
    "@denosaurs/typefetch": "^0.2",
    "deno_ast": "^1.0.0"
  }
}
