// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.

function toDataView(
  value: ArrayBufferView | ArrayBufferLike | DataView,
): DataView {
  if (value instanceof DataView) {
    return value;
  }
  return ArrayBuffer.isView(value)
    ? new DataView(value.buffer, value.byteOffset, value.byteLength)
    : new DataView(value);
}

/**
 * When checking the values of cryptographic hashes are equal, default
 * comparisons can be susceptible to timing based attacks, where attacker is
 * able to find out information about the host system by repeatedly checking
 * response times to equality comparisons of values.
 *
 * It is likely some form of timing safe equality will make its way to the
 * WebCrypto standard (see:
 * {@link https://github.com/w3c/webcrypto/issues/270 | w3c/webcrypto#270}), but until
 * that time, `timingSafeEqual()` is provided:
 *
 * @example Usage
 * ```ts
 * import { timingSafeEqual } from "@std/crypto/timing-safe-equal";
 * import { assert } from "@std/assert";
 *
 * const a = await crypto.subtle.digest(
 *   "SHA-384",
 *   new TextEncoder().encode("hello world"),
 * );
 * const b = await crypto.subtle.digest(
 *   "SHA-384",
 *   new TextEncoder().encode("hello world"),
 * );
 *
 * assert(timingSafeEqual(a, b));
 * ```
 *
 * @param a The first value to compare.
 * @param b The second value to compare.
 * @returns `true` if the values are equal, otherwise `false`.
 */
export function timingSafeEqual(
  a: ArrayBufferView | ArrayBufferLike | DataView,
  b: ArrayBufferView | ArrayBufferLike | DataView,
): boolean {
  if (a.byteLength !== b.byteLength) return false;
  const dataViewA = toDataView(a);
  const dataViewB = toDataView(b);
  const length = a.byteLength;
  let out = 0;
  let i = -1;
  while (++i < length) {
    out |= dataViewA.getUint8(i) ^ dataViewB.getUint8(i);
  }
  return out === 0;
}

// denoCacheMetadata={"headers":{"x-robots-tag":"noindex","via":"1.1 google","age":"3566","accept-ranges":"bytes","x-guploader-uploadid":"AAO2VwoC3WMv5dfWpBPxX7TUdyL2Ox1foF1ClTkHmwz0uY9px5APjJCAwenzI2I_UOKz7lFQ9_gOBJA","x-goog-storage-class":"STANDARD","server":"UploadServer","x-goog-stored-content-length":"1889","access-control-expose-headers":"*","access-control-allow-origin":"*","cross-origin-resource-policy":"cross-origin","x-jsr-cache-id":"YYZ","x-jsr-cache-status":"hit","x-goog-stored-content-encoding":"identity","x-goog-metageneration":"1","date":"Tue, 13 May 2025 22:56:06 GMT","last-modified":"Fri, 31 Jan 2025 08:14:05 GMT","etag":"\"30e938cd59dbb7e9cfc1442d4a3f8dfa\"","content-type":"text/typescript","x-goog-generation":"1738311245927253","x-goog-hash":"crc32c=fdGdvw==,md5=MOk4zVnbt+nPwUQtSj+N+g==","expires":"Wed, 13 May 2026 22:56:06 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","cache-control":"public, max-age=31536000, immutable","x-content-type-options":"nosniff","content-length":"1889"},"url":"https://jsr.io/@std/crypto/1.0.4/timing_safe_equal.ts","time":1747180532}