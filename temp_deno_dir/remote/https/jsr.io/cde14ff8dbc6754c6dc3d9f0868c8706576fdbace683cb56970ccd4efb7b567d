// Copyright 2018-2025 the Deno authors. MIT license.
// This module is browser compatible.
import { AssertionError } from "./assertion_error.ts";

/**
 * Make an assertion that `actual` and `expected` are almost equal numbers
 * through a given tolerance. It can be used to take into account IEEE-754
 * double-precision floating-point representation limitations. If the values
 * are not almost equal then throw.
 *
 * The default tolerance is one hundred thousandth of a percent of the
 * expected value.
 *
 * @example Usage
 * ```ts ignore
 * import { assertAlmostEquals } from "@std/assert";
 *
 * assertAlmostEquals(0.01, 0.02); // Throws
 * assertAlmostEquals(1e-8, 1e-9); // Throws
 * assertAlmostEquals(1.000000001e-8, 1.000000002e-8); // Doesn't throw
 * assertAlmostEquals(0.01, 0.02, 0.1); // Doesn't throw
 * assertAlmostEquals(0.1 + 0.2, 0.3, 1e-16); // Doesn't throw
 * assertAlmostEquals(0.1 + 0.2, 0.3, 1e-17); // Throws
 * ```
 *
 * @param actual The actual value to compare.
 * @param expected The expected value to compare.
 * @param tolerance The tolerance to consider the values almost equal. The
 * default is one hundred thousandth of a percent of the expected value.
 * @param msg The optional message to include in the error.
 */
export function assertAlmostEquals(
  actual: number,
  expected: number,
  tolerance?: number,
  msg?: string,
) {
  if (Object.is(actual, expected)) {
    return;
  }
  const delta = Math.abs(expected - actual);
  if (tolerance === undefined) {
    tolerance = isFinite(expected) ? Math.abs(expected * 1e-7) : 1e-7;
  }
  if (delta <= tolerance) {
    return;
  }

  const msgSuffix = msg ? `: ${msg}` : ".";
  const f = (n: number) => Number.isInteger(n) ? n : n.toExponential();
  throw new AssertionError(
    `Expected actual: "${f(actual)}" to be close to "${f(expected)}": \
delta "${f(delta)}" is greater than "${f(tolerance)}"${msgSuffix}`,
  );
}

// denoCacheMetadata={"headers":{"date":"Tue, 13 May 2025 23:23:02 GMT","expires":"Wed, 13 May 2026 23:23:02 GMT","x-jsr-cache-id":"YYZ","last-modified":"Thu, 24 Apr 2025 06:23:27 GMT","x-jsr-cache-status":"hit","x-guploader-uploadid":"AAO2VwpBMN19DJEgxDNvMm9lzCUc1wd2veHvwm65UQ5Rod6Q2KwzwS0an0RVEXlUjUU1tpbl","x-goog-stored-content-length":"1915","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","via":"1.1 google","content-length":"1915","content-type":"text/typescript","access-control-expose-headers":"*","cross-origin-resource-policy":"cross-origin","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-metageneration":"1","x-robots-tag":"noindex","accept-ranges":"bytes","x-goog-stored-content-encoding":"identity","x-goog-storage-class":"STANDARD","server":"UploadServer","etag":"\"b9859a3815d0bf2b823fe83f429be6fd\"","access-control-allow-origin":"*","cache-control":"public, max-age=31536000, immutable","x-goog-hash":"crc32c=m5WNAQ==,md5=uYWaOBXQvyuCP+g/Qpvm/Q==","age":"1950","x-goog-generation":"1745475807266541"},"url":"https://jsr.io/@std/assert/1.0.13/almost_equals.ts","time":1747180532}